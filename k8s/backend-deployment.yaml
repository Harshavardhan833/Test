apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: harshavardhan833/eka-backend:v1.0.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /api/health/
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
          env:
            - name: DB_HOST
              value: "postgres-service"
            - name: DB_PORT
              value: "5432"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
          command: ["sh", "-c"]
          args:
            - |
              set -e
              until pg_isready -h postgres-service -p 5432 -U postgres; do
                echo 'Waiting for PostgreSQL...'
                sleep 2
              done
              echo "Database is ready. Running migrations..."
              python manage.py migrate
              echo "Migrations complete. Starting Gunicorn..."
              gunicorn --bind 0.0.0.0:8000 eka_backend.wsgi